{% extends 'adminlte/base.html' %}
{% load static %}

{% block extra_head %}



	<style>
	canvas{
		-moz-user-select: none;
		-webkit-user-select: none;
		-ms-user-select: none;
	}
	</style>
	
	 <!-- Bootstrap 3.3.7 -->
  <link href="{% static "aerodromes/bower_components/bootstrap/dist/css/bootstrap.min.css" %}" rel="stylesheet" />
  <!-- Font Awesome -->
  <link href="{% static "aerodromes/bower_components/font-awesome/css/font-awesome.min.css" %}" rel="stylesheet"/>
  <!-- Ionicons -->
 <link href="{% static "aerodromes/bower_components/Ionicons/css/ionicons.min.css" %}"  rel="stylesheet"/>
 
 
  <!-- Nous chargeons les fichiers CDN de Leaflet. Le CSS AVANT le JS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css" integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ=="
            crossorigin="" />
<link rel="stylesheet" type="text/css" href="https://unpkg.com/leaflet.markercluster@1.3.0/dist/MarkerCluster.css" />
<link rel="stylesheet" type="text/css" href="https://unpkg.com/leaflet.markercluster@1.3.0/dist/MarkerCluster.Default.css" />
  
  
{% endblock %}
{% block title %}ANACIM DNAA{% endblock %}
{% block logo_href %}/{% endblock %}
{% block page_name %}TABLEAU DE BORD{% endblock %}
{% block page_actions %}{% endblock %}
{% block page_description %}{% endblock %}
{% block breadcrumbs %} {% endblock %}


{% block content_wrapper %}
  
  <!-- Content Wrapper. Contains page content -->
  <div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
      <h1>
        EVENEMENTS DE SECURITE LIES AU PERIL ANIMALIER : PAN/
        <small>Suivi des Indicateurs</small>
      </h1>
     
    </section>

    <!-- Main content -->
    <section class="content">
      <!-- Small boxes (Stat box) -->
         
       
      
      <div class="row">
        <div class="col-xs-12">
          

          <div class="box">
            <div class="box-header">
              <h3 class="box-title">Evénements de sécurité</h3>
            </div>
            <!-- /.box-header -->
            <div class="box-body">
              
                     
              
              <div class="row">
        <div class="col-md-12">
           <div style="width:100%;">
		<canvas id="canvasline"  style="height:250px"></canvas>
	</div>
		
	
          <p></p>

        </div>
        
        
      </div>
      
           
      <div class="row">
        <div class="col-md-12">
              
           <div id="container" style="width: 100%;">
				<canvas id="canvasbuble"></canvas>
			  </div>
				
              
         </div>
             
       </div>
       
      <br>
      <!-- 
        {% for c in evtsecuanneecourante %}
						 {{c.latitudeevt}}
						 {{c.longitudeevt}}
						 
			{% endfor %}
     -->
       <div class="row">
              
        <section class="col-lg-12 connectedSortable">
          <!-- Custom tabs (Charts with tabs)-->
          <div class="nav-tabs-custom">
            <!-- Tabs within a box -->
                     
            
            <ul class="nav nav-tabs pull-right">
                           
              <li class="pull-left header">
                            
               Distribution spatiale des événements de sécurité PAN de l'année {{anneecourante}}
                         
              </li>
              <li><a href="{% url 'aerodromes:accueilevts' %}" >Tous les événements de sécurité</a></li>              
              
            </ul>
             <div id="map" style="height: 600px; width: 100%;"></div>

          </div>
          <!-- /.nav-tabs-custom -->

            
        </section>
      
             
       
      </div>
              
                        
              
              
            </div>
            <!-- /.box-body -->
          </div>
          <!-- /.box -->
        </div>
        <!-- /.col -->
      </div>
      <!-- /.row -->
    </section>
    <!-- /.content -->
  
  </div>
  <!-- /.content-wrapper -->        
{% endblock %}

{% block extra_foot %}




<script src="{% static "aerodromes/bower_components/bootstrap/dist/js/bootstrap.min.js" %}"></script>


<!-- SlimScroll -->
<script src="{% static "aerodromes/bower_components/jquery-slimscroll/jquery.slimscroll.min.js" %}"></script>
<!-- FastClick -->
<script src="{% static "aerodromes/bower_components/fastclick/lib/fastclick.js" %}"></script>

<script src="{% static "aerodromes/bower_components/Chart.js-2.9.3/dist/Chart.min.js" %}"></script>
<script src="{% static "aerodromes/bower_components/Chart.js-2.9.3/samples/utils.js" %}"></script>



<script>


function mois(moisnbre) {
moislettre = ''
 if (moisnbre == '1')
   moislettre = 'Janvier';
 if (moisnbre == '2')
 	moislettre = 'Février';
if (moisnbre == '3')
 	moislettre = 'Mars'; 	
if (moisnbre == '4')
 	moislettre = 'Avril'; 	
if (moisnbre == '5')
 	moislettre = 'Mai'; 	      
if (moisnbre == '6')
 	moislettre = 'Juin'; 	
if (moisnbre == '7')
 	moislettre = 'Juillet'; 	
if (moisnbre == '8')
 	moislettre = 'Août'; 	
if (moisnbre == '9')
 	moislettre = 'Septembre'; 	
if (moisnbre == '10')
 	moislettre = 'Octobre'; 	
if (moisnbre == '11')
 	moislettre = 'Novembre'; 	
if (moisnbre == '12')
 	moislettre = 'Décembre'; 

return moislettre;
} 	
		
		var config = {
			type: 'line',
			data: {
				labels: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'],
				datasets: [{
					label: 'Année {{anneecourante}}',
					backgroundColor: window.chartColors.blue,
					borderColor: window.chartColors.blue,
					data: [
						
						{% for tn in bonnelisteevtan %}
						'{{ tn.nbreevt }}',
						{% endfor %}
						
					],
					fill: false,
				}, {
					label: 'Année {{anneeprecedente}}',
					fill: false,
					backgroundColor: window.chartColors.yellow,
					borderColor: window.chartColors.yellow,
					borderWidth: 2,
					data: [
						
						{% for tn in bonnelisteevt %}
						'{{ tn.nbreevt }}',
						{% endfor %}
						
					],
				}]
			},
			options: {
				responsive: true,
				title: {
					display: true,
					text: 'Nombre d\'événements de sécurité de type Péril Animalier'
				},
				tooltips: {
					mode: 'index',
					intersect: false,
				},
				hover: {
					mode: 'nearest',
					intersect: true
				},
				scales: {
					xAxes: [{
						display: true,
						scaleLabel: {
							display: true,
							labelString: 'Mois'
						}
					}],
					yAxes: [{
						display: true,
						scaleLabel: {
							display: true,
							labelString: 'Nommbre d\'événements'
						}
					}]
				}
			}
		};
		
		var color = Chart.helpers.color;
		var bubbleChartData = {
			animation: {
				duration: 10000
			},
			datasets: [{
				label: 'Evénements de sécurité PAN de l\'année {{anneecourante}}--Total: {{nbreevtsecuanneecourante}}',
				backgroundColor: color(window.chartColors.blue).alpha(0.5).rgbString(),
				borderColor: window.chartColors.blue,
				borderWidth: 1,
				data: [
				
						{% for tn in evtsecuanneecourante %}
				
				{
				   x: '{{tn.dateevt.month}}',
					y: '{{tn.heureevt.hour}}',
					r: '{{tn.dateevt.day}}'/2,
													
				},
				{% endfor %}
				{
				 xi: '{{tn.dateevt.month}}',
					yi: '{{tn.heureevt.hour}}',
					ri: '{{tn.dateevt.day}}'/2,
				}]
			}, {
				label: 'Evénements de sécurité PAN de l\'année {{anneeprecedente}}--Total: {{nbreevtsecuanneepreceden}}',
				backgroundColor: color(window.chartColors.yellow).alpha(0.5).rgbString(),
				borderColor: window.chartColors.yellow,
				borderWidth: 1,
				data: [
				
						{% for t in evtsecuanneepreceden %}
				
				{
				   x: '{{t.dateevt.month}}',
					y: '{{t.heureevt.hour}}',
					r: '{{t.dateevt.day}}'/2,
					
													
				},
				{% endfor %}
				
				{
				   xi: '{{t.dateevt.month}}',
					yi: '{{t.heureevt.hour}}',
					ri: '{{t.dateevt.day}}'/2,
													
				}]
							
			}]
				
		
		};

		window.onload = function() {
			var ctx = document.getElementById('canvasbuble').getContext('2d');
			window.myChart = new Chart(ctx, {
				type: 'bubble',
				
				data: bubbleChartData,
				options: {
					responsive: true,
					title: {
						display: true,
						text: 'Heures d\'occurrence des événements de sécurité'
					},
					tooltips: {
						mode: 'point'
					},
					
					
					scales: {
					xAxes: [{
						display: true,
						scaleLabel: {
							display: true,
							labelString: 'Date - Mois'
						}
						
                
					}],
					yAxes: [{
						display: true,
						
						scaleLabel: {
							display: true,
							labelString: 'Heure d\'occurrence'
						}
					}]
				}
					
					
				}
			});
			
			
			
			var ctx = document.getElementById('canvasline').getContext('2d');
			window.myLine = new Chart(ctx, config);
		
					
				// Fonction d'initialisation qui s'exécute lorsque le DOM est chargé
				initMap(); 
									
		};

			
	</script>

<script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js" integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw=="
            crossorigin=""></script>
<script type='text/javascript' src='https://unpkg.com/leaflet.markercluster@1.3.0/dist/leaflet.markercluster.js'></script>            
<script type="text/javascript">
			// On initialise la latitude et la longitude de Paris (centre de la carte)
			var lat = 14.00;
			var lon = -14.749903;
			var markerClusters; // Servira à stocker les groupes de marqueurs
			
			// Nous initialisons une liste de marqueurs de nos aérodromes
         var aeroInternationaux = {
	         
	         "Dakar-Diass": { "lat":14.675224, "lon": -17.072998 },
          	"Cap Skirring": { "lat": 12.3948273, "lon": -16.7482899 },
         	"Ziguinchor": { "lat": 12.556164, "lon": -16.2832111  },
         	
         	"Tambacounda": { "lat": 13.7329523, "lon": -13.6589313  },
         	"Saint-Louis": { "lat": 16.0493084, "lon": -16.4616074 }
	          	
         	
         };
         var aeroNationaux = {
         	"Dakar-Yoff": { "lat": 14.7369428, "lon": -17.4837539 },
         	"Sedhiou": { "lat": 12.8143958, "lon": -15.55948219 },
	         "Kolda": { "lat":12.89885, "lon": -14.9684732 },
          	"Kédougou": { "lat": 12.5728667, "lon": -12.2218031 },
          	"Richard-Toll": { "lat":16.4374229, "lon": -15.6582709 },
          	"Matam": { "lat": 15.5950064, "lon": -13.3261739 },
         	"Linguère": { "lat": 15.399461,"lon": -15.0870334   },
         	"Bakel": { "lat": 14.8461168, "lon": -12.4711737 },
	         "Simenti": { "lat":13.0452134, "lon": -13.2980982 },
          	"Podor": { "lat": 16.6771404, "lon": -14.9668502 },
         	"Kaolack": { "lat":14.1477262, "lon": -16.0535279  },
         	"Saly-Joseph": { "lat": 14.4618246, "lon": -17.0123983  },
	         "Sabodala": { "lat":13.2172988, "lon": -12.1073383 },
	         "Noumoufouga": { "lat": 12.4601457, "lon": -11.5025264  }
          	
         };
         
			var evtsecupananneecour = {
			
			{% for t in evtsecuanneecourante %}
			
			'{{t.dateevt}}': { "lat": '{{t.latitudeevt}}', "lon": '{{t.longitudeevt}}', "date":'{{t.dateevt}}', "heure": '{{t.heureevt}}' },
			
			{% endfor %}
			"evt0": { "lat": 89440, "lon": 10000  } //donner des coordonnées qui n'existent pas
			};
			
			var macarte = null;
			// Fonction d'initialisation de la carte
			function initMap() {
				// Créer l'objet "macarte" et l'insèrer dans l'élément HTML qui a l'ID "map"
                macarte = L.map('map').setView([lat, lon], 7);
                markerClusters = L.markerClusterGroup(); // Nous initialisons les groupes de marqueurs
	             
	             //Dossier contenant les markers
	             var myIcon = L.icon({
			  			   iconUrl: 'http://localhost:8000/static/Airport.png',
			  			   //iconUrl: 'http://172.20.2.109:8000/static/Airport.png',
			   		   iconSize: [30, 30],
						   iconAnchor: [5, 30],
							popupAnchor: [-3, -76],
						});
						
					 var myIconevt = L.icon({
			  			   iconUrl: 'http://localhost:8000/static/warning.svg',
			  			   //iconUrl: 'http://172.20.2.109:8000/static/warning.png',
			   		   iconSize: [30, 30],
						   iconAnchor: [5, 30],
							popupAnchor: [-3, -76],
						});
                // Leaflet ne récupère pas les cartes (tiles) sur un serveur par défaut. Nous devons lui préciser où nous souhaitons les récupérer. Ici, openstreetmap.fr
                L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {
                    // Il est toujours bien de laisser le lien vers la source des données
                    attribution: 'données © <a href="//osm.org/copyright">OpenStreetMap</a>/ODbL - rendu <a href="//openstreetmap.fr">OSM France</a>',
                    minZoom: 1,
                    maxZoom: 20
                }).addTo(macarte);
                
  /*              // Nous parcourons la liste des aerodr
	for (aero in aeroInternationaux) {
		var marker = L.marker([aeroInternationaux[aero].lat, aeroInternationaux[aero].lon], {icon: myIcon});
		// Nous ajoutons la popup. A noter que son contenu (ici la variable aero) peut être du HTML
    	marker.bindPopup('Aéroport International '+ aero);
    	markerClusters.addLayer(marker); // Nous ajoutons le marqueur aux groupes
   	
		    	
	}
	macarte.addLayer(markerClusters);
		
	for (aero in aeroNationaux) {
		var marker = L.marker([aeroNationaux[aero].lat, aeroNationaux[aero].lon]);
		// Nous ajoutons la popup. A noter que son contenu (ici la variable aero) peut être du HTML
	   marker.bindPopup('Aérodrome '+ aero);
	   markerClusters.addLayer(marker); // Nous ajoutons le marqueur aux groupes
	} 
	macarte.addLayer(markerClusters);  */
	
//affichons les événements sécurité

            
	for (e in evtsecupananneecour) {
		var marker = L.marker([evtsecupananneecour[e].lat, evtsecupananneecour[e].lon], {icon: myIconevt});
		// Nous ajoutons la popup. A noter que son contenu (ici la variable evt) peut être du HTML
    	marker.bindPopup('Evt sécur PAN du '+ evtsecupananneecour[e].date + ' à '+ evtsecupananneecour[e].heure );
    	markerClusters.addLayer(marker); // Nous ajoutons le marqueur aux groupes
   		    	
	}
	macarte.addLayer(markerClusters);
	
	            	
  }          
			
		</script>



{% endblock %}
